/*********************************************
Generated by Intentor.Yamapper Class Generator
http://intentor.com.br/projects/yamapper/
*********************************************/
using System;
using System.Collections.Generic;
using System.Linq;
using Intentor.Yamapper;
using Intentor.Examples.Model.Core.DataInterfaces;
using Intentor.Examples.Model.Core.Entities;
using Intentor.Examples.Model.Data;

namespace Intentor.Examples.Model.Domain
{	
	/// <summary>Business Object ClienteProdutoBiz.</summary>
	public partial class ClienteProdutoBiz :
		Intentor.Examples.Model.Domain.Supertypes.BizBase<IClienteProdutoRepository>
		, IClienteProdutoRepository
	{
		#region Construtor

        public ClienteProdutoBiz(IClienteProdutoRepository dao)
            : base(dao)
        {            
        }

        #endregion
		
		#region ICommonDataBaseActions Members
		
		public List<ClienteProduto> GetAll()
		{
            return _dao.GetAll();
		}

        public virtual List<ClienteProduto> GetByCriteria(Criteria crit)
        {
            return _dao.GetByCriteria(crit);
        }

        public void Create(ClienteProduto obj)
        {
            _dao.Create(obj);
        }

        public void Update(ClienteProduto obj)
        {
            _dao.Update(obj);
        }

        public int Delete(Criteria crit)
        {
            return _dao.Delete(crit);
        }
		
        public int Count()
        {
            return _dao.Count();
        }

        public int Count(Criteria crit)
        {
            return _dao.Count(crit);
        }

        public bool Exists(Criteria crit)
        {
            return _dao.Exists(crit);
        }

        public bool HasRows()
        {
            return _dao.HasRows();
        }

        #endregion

		#region MÃ©todos

		public ClienteProduto GetById(int idCliente, int idProduto) 
		{
			return _dao.GetById(idCliente, idProduto);
		}
			
		public int Delete(int idCliente, int idProduto) 
		{
			return _dao.Delete(idCliente, idProduto);
		}

		public List<ClienteProduto> GetByIdCliente(int idCliente)
		{
			return _dao.GetByIdCliente(idCliente);
		}

        #endregion
	}
}